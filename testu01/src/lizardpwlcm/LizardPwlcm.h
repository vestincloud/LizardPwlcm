/***
 *  Created by Zhang Ti-kui
 * 
 */

#ifndef __LIZARD_PWLCM__H
#define __LIZARD_PWLCM__H

#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <time.h>
#include "lizard.h"
#include "toolex.h"
#include "pwlcm.h"

/*-- States and control parameters for PWLCM1 and PWLCM2 --*/
static uint32_t P1 = 0;
static uint32_t P2 = 0;
static uint32_t X0 = 0; 
static uint32_t X1 = 0;

/* -- Seed key and initial vector for LIZARD-PWLCM ---*/
static char *Kstr="f2942e83948d92f948b938a3913493";
static char *IVstr="8f918e48d93f3016";
uint8_t Kbin[122];
uint8_t IVbin[66]; 

uint32_t low_mask=0x0000ffff;


/***
 *Initialize an interger by mostleft_bit in left and random bits generated by LIZARD for the others
 */
static inline void init_integer(uint32_t *data, uint32_t mostleft_bit, int length){
	*data =mostleft_bit;
	for(int i=0; i<length; i++){
		*data <<=1;
		*data |= (uint32_t)(step());
	}
}

static inline void lizard_pwlcm_init(){
	_construct(Kbin,IVbin);

	init_integer(&X0, 0,NN);
	init_integer(&X1, 0,NN);
	init_integer(&P1,3, NN-3);
	init_integer(&P2,2, NN-3);

	init(X0,P1,X1,P2);
}

static inline void LizardPwlcm_seed(uint64_t IV){
	hex2binArray(Kstr,Kbin);
	hex2binArray(IVstr,IVbin);
	lizard_pwlcm_init();
}

static inline uint32_t LizardPwlcm(){
	return (pwlcm_cross(step())  << 16) | (pwlcm_cross(step()) & low_mask);
	//return (uint64)pwlcm_cross(step());
}

#endif
